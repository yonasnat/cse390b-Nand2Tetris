// File: projects/p4/normal/RAM8.hdl
// This file is part of the CSE 390B
// project series, adapted from the
// Nand2Tetris project.

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=l01, b=l02, c=l03, d=l04, e=l05, f=l06, g=l07, h=l08);
    Register(in=in, load=l01, out=out1);
    Register(in=in, load=l02, out=out2);
    Register(in=in, load=l03, out=out3);
    Register(in=in, load=l04, out=out4);
    Register(in=in, load=l05, out=out5);
    Register(in=in, load=l06, out=out6);
    Register(in=in, load=l07, out=out7);
    Register(in=in, load=l08, out=out8);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address, out=out);
}